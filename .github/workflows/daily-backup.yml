name: Daily Database Backup to Google Drive

on:
  schedule:
    # Runs daily at 5:00 AM UTC. Adjust the cron schedule as needed.
    # See: https://crontab.guru/
    - cron: '0 5 * * *'
  push:
    branches: [ main ] # Trigger on push to main
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab

jobs:
  backup:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Set a timeout for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use Node.js v20 or match your project's version
          cache: 'npm' # Cache npm dependencies

      - name: Install PostgreSQL client v17 (for pg_dump)
        run: |
          # Add PostgreSQL Apt Repository (using modern gpg method)
          sudo apt-get update
          sudo apt-get install -y lsb-release wget ca-certificates gnupg
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          # Update package list again after adding repo
          sudo apt-get update
          # Ensure common files are present and install specific major version
          sudo apt-get install -y --reinstall postgresql-client-common
          sudo apt-get install -y postgresql-client-17
          # Verify installation path and version (for debugging)
          echo "Listing /usr/lib/postgresql/17/bin/ ..."
          ls -l /usr/lib/postgresql/17/bin/
          echo "Checking pg_dump version..."
          /usr/lib/postgresql/17/bin/pg_dump --version
        shell: bash

      - name: Install dependencies
        run: npm ci # Use 'ci' for cleaner installs in CI environments

      - name: Run Backup and Upload Script
        # Add compiler options to ensure ts-node handles modules correctly
        run: |
          npx ts-node --compiler-options '{"module": "CommonJS"}' scripts/backup-to-gdrive.ts
        env:
          NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          GOOGLE_SERVICE_ACCOUNT_KEY_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_JSON }}
          # NODE_ENV: production # Optional: Set if your script behaves differently in prod
